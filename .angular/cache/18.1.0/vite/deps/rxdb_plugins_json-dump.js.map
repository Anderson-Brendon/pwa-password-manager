{
  "version": 3,
  "sources": ["../../../../../node_modules/rxdb/dist/esm/plugins/json-dump/index.js"],
  "sourcesContent": ["/**\n * this plugin adds the json export/import capabilities to RxDB\n */\nimport { createRxQuery, queryCollection, _getDefaultQuery } from \"../../rx-query.js\";\nimport { newRxError } from \"../../rx-error.js\";\nimport { flatClone, getDefaultRevision, now } from \"../../plugins/utils/index.js\";\nfunction dumpRxDatabase(collections) {\n  var json = {\n    name: this.name,\n    instanceToken: this.token,\n    collections: []\n  };\n  var useCollections = Object.keys(this.collections).filter(colName => !collections || collections.includes(colName)).filter(colName => colName.charAt(0) !== '_').map(colName => this.collections[colName]);\n  return Promise.all(useCollections.map(col => col.exportJSON())).then(cols => {\n    json.collections = cols;\n    return json;\n  });\n}\nvar importDumpRxDatabase = function (dump) {\n  /**\n   * collections must be created before the import\n   * because we do not know about the other collection-settings here\n   */\n  var missingCollections = dump.collections.filter(col => !this.collections[col.name]).map(col => col.name);\n  if (missingCollections.length > 0) {\n    throw newRxError('JD1', {\n      missingCollections\n    });\n  }\n  return Promise.all(dump.collections.map(colDump => this.collections[colDump.name].importJSON(colDump)));\n};\nvar dumpRxCollection = async function () {\n  var json = {\n    name: this.name,\n    schemaHash: await this.schema.hash,\n    docs: []\n  };\n  var query = createRxQuery('find', _getDefaultQuery(), this);\n  return queryCollection(query).then(docs => {\n    json.docs = docs.map(docData => {\n      docData = flatClone(docData);\n      delete docData._rev;\n      delete docData._attachments;\n      return docData;\n    });\n    return json;\n  });\n};\nasync function importDumpRxCollection(exportedJSON) {\n  // check schemaHash\n  if (exportedJSON.schemaHash !== (await this.schema.hash)) {\n    throw newRxError('JD2', {\n      schemaHash: exportedJSON.schemaHash,\n      own: this.schema.hash\n    });\n  }\n  var docs = exportedJSON.docs;\n  return this.storageInstance.bulkWrite(docs.map(docData => {\n    var document = Object.assign({}, docData, {\n      _meta: {\n        lwt: now()\n      },\n      _rev: getDefaultRevision(),\n      _attachments: {},\n      _deleted: false\n    });\n    return {\n      document\n    };\n  }), 'json-dump-import');\n}\nexport var RxDBJsonDumpPlugin = {\n  name: 'json-dump',\n  rxdb: true,\n  prototypes: {\n    RxDatabase: proto => {\n      proto.exportJSON = dumpRxDatabase;\n      proto.importJSON = importDumpRxDatabase;\n    },\n    RxCollection: proto => {\n      proto.exportJSON = dumpRxCollection;\n      proto.importJSON = importDumpRxCollection;\n    }\n  },\n  overwritable: {}\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;AAMA,SAAS,eAAe,aAAa;AACnC,MAAI,OAAO;AAAA,IACT,MAAM,KAAK;AAAA,IACX,eAAe,KAAK;AAAA,IACpB,aAAa,CAAC;AAAA,EAChB;AACA,MAAI,iBAAiB,OAAO,KAAK,KAAK,WAAW,EAAE,OAAO,aAAW,CAAC,eAAe,YAAY,SAAS,OAAO,CAAC,EAAE,OAAO,aAAW,QAAQ,OAAO,CAAC,MAAM,GAAG,EAAE,IAAI,aAAW,KAAK,YAAY,OAAO,CAAC;AACzM,SAAO,QAAQ,IAAI,eAAe,IAAI,SAAO,IAAI,WAAW,CAAC,CAAC,EAAE,KAAK,UAAQ;AAC3E,SAAK,cAAc;AACnB,WAAO;AAAA,EACT,CAAC;AACH;AACA,IAAI,uBAAuB,SAAU,MAAM;AAKzC,MAAI,qBAAqB,KAAK,YAAY,OAAO,SAAO,CAAC,KAAK,YAAY,IAAI,IAAI,CAAC,EAAE,IAAI,SAAO,IAAI,IAAI;AACxG,MAAI,mBAAmB,SAAS,GAAG;AACjC,UAAM,WAAW,OAAO;AAAA,MACtB;AAAA,IACF,CAAC;AAAA,EACH;AACA,SAAO,QAAQ,IAAI,KAAK,YAAY,IAAI,aAAW,KAAK,YAAY,QAAQ,IAAI,EAAE,WAAW,OAAO,CAAC,CAAC;AACxG;AACA,IAAI,mBAAmB,WAAkB;AAAA;AACvC,QAAI,OAAO;AAAA,MACT,MAAM,KAAK;AAAA,MACX,YAAY,MAAM,KAAK,OAAO;AAAA,MAC9B,MAAM,CAAC;AAAA,IACT;AACA,QAAI,QAAQ,cAAc,QAAQ,iBAAiB,GAAG,IAAI;AAC1D,WAAO,gBAAgB,KAAK,EAAE,KAAK,UAAQ;AACzC,WAAK,OAAO,KAAK,IAAI,aAAW;AAC9B,kBAAU,UAAU,OAAO;AAC3B,eAAO,QAAQ;AACf,eAAO,QAAQ;AACf,eAAO;AAAA,MACT,CAAC;AACD,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AAAA;AACA,SAAe,uBAAuB,cAAc;AAAA;AAElD,QAAI,aAAa,gBAAgB,MAAM,KAAK,OAAO,OAAO;AACxD,YAAM,WAAW,OAAO;AAAA,QACtB,YAAY,aAAa;AAAA,QACzB,KAAK,KAAK,OAAO;AAAA,MACnB,CAAC;AAAA,IACH;AACA,QAAI,OAAO,aAAa;AACxB,WAAO,KAAK,gBAAgB,UAAU,KAAK,IAAI,aAAW;AACxD,UAAI,WAAW,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QACxC,OAAO;AAAA,UACL,KAAK,IAAI;AAAA,QACX;AAAA,QACA,MAAM,mBAAmB;AAAA,QACzB,cAAc,CAAC;AAAA,QACf,UAAU;AAAA,MACZ,CAAC;AACD,aAAO;AAAA,QACL;AAAA,MACF;AAAA,IACF,CAAC,GAAG,kBAAkB;AAAA,EACxB;AAAA;AACO,IAAI,qBAAqB;AAAA,EAC9B,MAAM;AAAA,EACN,MAAM;AAAA,EACN,YAAY;AAAA,IACV,YAAY,WAAS;AACnB,YAAM,aAAa;AACnB,YAAM,aAAa;AAAA,IACrB;AAAA,IACA,cAAc,WAAS;AACrB,YAAM,aAAa;AACnB,YAAM,aAAa;AAAA,IACrB;AAAA,EACF;AAAA,EACA,cAAc,CAAC;AACjB;",
  "names": []
}
